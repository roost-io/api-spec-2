# Test generated by RoostGPT for test credential-artillery-test using AI Type Vertex AI and AI Model code-bison-32k


# RoostTestHash=6dd436357d

# Corrected Artillery Test Case
config:
  target: {{ $processEnvironment.API_HOST }}
  expect: true
  security:
    ApiKeyAuth:
      type: 'apiKey'
      name: 'Token'
      in: 'header'
      value: {{$processEnvironment.AUTH_TOKEN}}
  payload:
    csv: me_patch_others.csv
    skipHeader: true

scenario:
  - get:
      url: /me
      headers:
        Token: {{$processEnvironment.AUTH_TOKEN}}
      expect:
        statusCode: 401
        contentType: application/json
        hasHeader: api-version
        headerEquals: api-version: 1.0.0
        hasProperty: error
        hasProperty: description
        equals: error: error/code
        equals: description: Descriptive Error Message
    log: Requesting user details without authorization
    think: 500

  - post:
      url: /me
      headers:
        Token: {{$processEnvironment.AUTH_TOKEN}}
      payload:
        name: not_a_string
      expect:
        statusCode: 400
        contentType: application/json
        hasHeader: api-version
        headerEquals: api-version: 1.0.0
        hasProperty: error
        hasProperty: description
        equals: error: validation/type-mismatch
        equals: description: Descriptive Error Message
    log: Updating user details with invalid name type
    think: 500

  - patch:
      url: /me
      headers:
        Token: {{$processEnvironment.AUTH_TOKEN}}
      payload:
        name: "John Doe"
        image: not_a_base64_string
      expect:
        statusCode: 400
        contentType: application/json
        hasHeader: api-version
        headerEquals: api-version: 1.0.0
        hasProperty: error
        hasProperty: description
        equals: error: validation/format-mismatch
        equals: description: Descriptive Error Message
    log: Updating user details with invalid image format
    think: 500

  - patch:
      url: /me
      headers:
        Token: {{$processEnvironment.AUTH_TOKEN}}
      payload:
        settings:
          not_a_valid_setting: true
      expect:
        statusCode: 400
        contentType: application/json
        hasHeader: api-version
        headerEquals: api-version: 1.0.0
        hasProperty: error
        hasProperty: description
        equals: error: validation/additional-properties-not-allowed
        equals: description: Descriptive Error Message
    log: Updating user details with invalid settings
    think: 500

  - delete:
      url: /me
      headers:
        Token: not_a_valid_token
      expect:
        statusCode: 401
        contentType: application/json
        hasHeader: api-version
        headerEquals: api-version: 1.0.0
        hasProperty: error
        hasProperty: description
        equals: error: error/code
        equals: description: Descriptive Error Message
    log: Deleting user details with invalid token
    think: 500

  - get:
      url: /me/non-existing-endpoint
      headers:
        Token: {{$processEnvironment.AUTH_TOKEN}}
      expect:
        statusCode: 404
        contentType: application/json
        hasHeader: api-version
        headerEquals: api-version: 1.0.0
        hasProperty: error
        hasProperty: description
        equals: error: error/code
        equals: description: Descriptive Error Message
    log: Requesting non-existing endpoint
    think: 500
