# Test generated by RoostGPT for test credential-artillery-test using AI Type Open AI and AI Model gpt-4


# Test generated for /deposit_post for http method type POST in artillery framework

# RoostTestHash=70db6d5eac


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "deposit_post_others.csv"
    fields:
      - "customerId"
      - "sourceAccountId"
      - "amount"
      - "currency"
      - "frontImage"
      - "backImage"
    skipHeader: true

scenarios:
  - name: "Test non-successful API responses"
    flow:
      - log: "Sending POST request with invalid customerId"
        post:
          url: "/deposit"
          headers:
            koreUserId: "invalidId"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            customerId: "invalidId"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 400
        think: 1

      - log: "Sending POST request with invalid Authorization token"
        post:
          url: "/deposit"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer invalidToken"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 401
        think: 1

      - log: "Sending POST request to invalid URL"
        post:
          url: "/invalidUrl"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 404
        think: 1
