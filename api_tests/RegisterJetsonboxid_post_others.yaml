# Test generated by RoostGPT for test qlue-single-api-test using AI Type Open AI and AI Model gpt-4


# Test generated for /RegisterJetsonboxid_post for http method type POST in artillery framework

# RoostTestHash=c528c38714


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "RegisterJetsonboxid_post_others.csv"
    fields:
      - "jetson_uuid"
      - "username"
      - "clusterId"
      - "houseId"
    skipHeader: true

scenarios:
  - name: "Non-success API responses"
    flow:
      # Invalid payload
      - post:
          url: "/RegisterJetsonboxid?jetson_uuid={{ jetson_uuid }}&username={{ username }}&clusterId={{ clusterId }}&houseId={{ houseId }}"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            invalidField: "invalidValue"
          expect:
            - statusCode: 400
            - hasProperty: "message"
          think: 1

      # Unauthorized request
      - post:
          url: "/RegisterJetsonboxid?jetson_uuid={{ jetson_uuid }}&username={{ username }}&clusterId={{ clusterId }}&houseId={{ houseId }}"
          headers:
            Content-Type: "application/json"
            Authorization: "InvalidToken"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            username: "{{ username }}"
            clusterId: "{{ clusterId }}"
            houseId: "{{ houseId }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
          think: 1

      # Non-existent endpoint
      - post:
          url: "/InvalidEndpoint?jetson_uuid={{ jetson_uuid }}&username={{ username }}&clusterId={{ clusterId }}&houseId={{ houseId }}"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            username: "{{ username }}"
            clusterId: "{{ clusterId }}"
            houseId: "{{ houseId }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
          think: 1
