# Test generated by RoostGPT for test products-payload-test using AI Type Open AI and AI Model gpt-4


# Test generated for /user_post for http method type POST in artillery framework

# RoostTestHash=d815599fc6


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "user_post_others.csv"
    fields:
      - "id"
      - "username"
      - "firstName"
      - "lastName"
      - "email"
      - "password"
      - "phone"
      - "userStatus"
    skipHeader: true
  environments:
    staging:
      target: "http://staging-api.example.com"

scenarios:
  - name: "Testing failure cases and error handling for /v2/user API endpoint"
    flow:
      # Request with invalid payload
      - post:
          url: "/v2/user"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - hasProperty: "error"
        think: 1

      # Request with missing authorization token
      - post:
          url: "/v2/user"
          headers:
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
            - hasProperty: "error"
        think: 1

      # Request to non-existent URL
      - post:
          url: "/v2/non_existent_url"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 404
        think: 1
