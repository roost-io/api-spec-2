# ********RoostGPT********

# Test generated by RoostGPT for test gpt-turbo using AI Type Open AI and AI Model gpt-4-turbo-preview
# 
# Test generated for /accounts_post for http method type POST in artillery framework
# RoostTestHash=53e96f9805
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "accounts_post_others.csv"
    fields:
      - "email"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Scenario for Invalid API Requests"
    flow:
      - comment: "Invalid email format in request body"
      - post:
          url: "/accounts"
          headers:
            Content-Type: "application/json"
          json:
            email: "notAnEmail"
          expect:
            - statusCode: 400
            - hasProperty: "message"
      - think: 1

      - comment: "Missing required email field in request body"
      - post:
          url: "/accounts"
          headers:
            Content-Type: "application/json"
          json: {}
          expect:
            - statusCode: 400
            - hasProperty: "message"
      - think: 1

      - comment: "Invalid commit-hash value in header"
      - post:
          url: "/accounts"
          headers:
            Content-Type: "application/json"
            commit-hash: "invalidhash"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
      - think: 1

      - comment: "Valid email but unauthorized request missing header"
      - post:
          url: "/accounts"
          headers:
            Content-Type: "application/json"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
      - think: 1

      - comment: "Invalid URL - testing not found case"
      - post:
          url: "/invalid_endpoint"
          headers:
            Content-Type: "application/json"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"

